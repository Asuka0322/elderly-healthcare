<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.budailad.dao.SysUserDao">

    <resultMap type="com.budailad.entity.SysUser" id="SysUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userPwd" column="user_pwd" jdbcType="VARCHAR"/>
        <result property="userPower" column="user_power" jdbcType="INTEGER"/>
        <result property="isDisabled" column="is_disabled" jdbcType="INTEGER"/>
        <result property="registerTime" column="register_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="destroyTime" column="destroy_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SysUserMap">
        select id,
               user_name,
               user_pwd,
               user_power,
               is_disabled,
               register_time,
               update_time,
               destroy_time
        from sys_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysUserMap">
        select
        id, user_name, user_pwd, user_power, is_disabled, register_time, update_time, destroy_time
        from sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userPwd != null and userPwd != ''">
                and user_pwd = #{userPwd}
            </if>
            <if test="userPower != null">
                and user_power = #{userPower}
            </if>
            <if test="isDisabled != null">
                and is_disabled = #{isDisabled}
            </if>
            <if test="registerTime != null">
                and register_time = #{registerTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="destroyTime != null">
                and destroy_time = #{destroyTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="userPwd != null and userPwd != ''">
                and user_pwd = #{userPwd}
            </if>
            <if test="userPower != null">
                and user_power = #{userPower}
            </if>
            <if test="isDisabled != null">
                and is_disabled = #{isDisabled}
            </if>
            <if test="registerTime != null">
                and register_time = #{registerTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="destroyTime != null">
                and destroy_time = #{destroyTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(user_name, user_pwd, user_power, is_disabled, register_time, update_time, destroy_time)
        values (#{userName}, #{userPwd}, #{userPower}, #{isDisabled}, #{registerTime}, #{updateTime}, #{destroyTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(user_name, user_pwd, user_power, is_disabled, register_time, update_time, destroy_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.userPwd}, #{entity.userPower}, #{entity.isDisabled}, #{entity.registerTime},
            #{entity.updateTime}, #{entity.destroyTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(user_name, user_pwd, user_power, is_disabled, register_time, update_time, destroy_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.userPwd}, #{entity.userPower}, #{entity.isDisabled}, #{entity.registerTime},
            #{entity.updateTime}, #{entity.destroyTime})
        </foreach>
        on duplicate key update
        user_name = values(user_name),
        user_pwd = values(user_pwd),
        user_power = values(user_power),
        is_disabled = values(is_disabled),
        register_time = values(register_time),
        update_time = values(update_time),
        destroy_time = values(destroy_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_user
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userPwd != null and userPwd != ''">
                user_pwd = #{userPwd},
            </if>
            <if test="userPower != null">
                user_power = #{userPower},
            </if>
            <if test="isDisabled != null">
                is_disabled = #{isDisabled},
            </if>
            <if test="registerTime != null">
                register_time = #{registerTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="destroyTime != null">
                destroy_time = #{destroyTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_user
        where id = #{id}
    </delete>

</mapper>

